version: 2.1

orbs:

  aws-cli: circleci/aws-cli@2.0.3

commands:
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name stack-${CIRCLE_WORKFLOW_ID:0:7}


jobs:

    Create-Infrastructure:
      docker: 
        - image: amazon/aws-cli
      steps:
        - checkout
        - run: 
            name: "Creating Cloudformation Stack"
            command: "aws cloudformation deploy --stack-name stack-${CIRCLE_WORKFLOW_ID:0:7} --template-file cloudTemplate.yml --region us-east-1"

    Configure-Infrastructure:
      docker: 
        - image: python:3.7-alpine3.11
      steps:
        - checkout
        - add_ssh_keys:
            fingerprints: 
              - "34:2f:21:08:4b:27:6d:d0:0a:c1:bd:79:f1:3e:a0:d1"
        - run:
            name: "Installing Ansible"
            command: apk add --update ansible
        - run:
            name: "Installing Ansible"
            command: apk add --update openssh
        - run:
            name: "cating playbook"
            command: "cat main4.yml"    
        - run: 
            name: "Configuring Servers"
            command: "ansible-playbook main4.yml -i inventory.txt" 
    smoke_test:
      docker:
        - image: alpine:latest
      steps:
        - run: apk add --update curl
        - run:
            name: smoke test
            command: |
              URL="https://blog.udacity.com/"
              # Test if website exists
              if curl -s --head ${URL} 
              then
                return 0
              else
                return 1
              fi  
    smoke_test_fail:
      docker:
        - image: amazon/aws-cli
      steps:
        - run:
            name: Test job
            command:  return 1
        - destroy_environment
    
workflows: 
  CICD-Workflow: 
    jobs:
      - Create-Infrastructure
      - smoke_test_fail:
          requires: 
            - Create-Infrastructure
      #- Create-Infrastructure
      #- Configure-Infrastructure:
      #    requires: 
      #      - Create-Infrastructure